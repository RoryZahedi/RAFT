syntax = "proto3";

package messaging;
import "google/protobuf/empty.proto";

message Request {
    string message = 1;
}

message Response {
    string message = 1;
}

message Term{
    int32 term = 1;
}

message receivedTerm{
    int32 term = 1;
}

message Index{
    int32 index = 1;
}

message voteGranted{
    bool vote = 1;
}

message appendedEntry{
    bool success = 1;
}
message electionRequestResponse{
    receivedTerm term = 1;
    voteGranted vg = 2;
}

message SendAppendEntriesArgs{
    Term term = 1;
    Index prevLogIndex = 2;
    Term prevLogTerm = 3;
    Request entries = 4;//Log
    Index commitIndex = 5;
    string sendingClientNumber = 6;
}

message SendAppendEntriesResponse{
    Term recipientTerm = 1;
    appendedEntry success = 2;
}


message TerminalArgs{
    string commandIssued = 1;
    string clientIDs = 2;
    string dictID = 3;
    string dictKey = 4;
    string dictValue = 5;
    string sendingClientNumber = 6;
}

message RequestVoteArgs{
    int32 term = 1;
    string leaderLog = 2;
    string sendingClientNumber = 3;
}


service Messaging {
    rpc SendMessage(Request) returns (Response) {}
}

service Heartbeat{
    rpc SendHeartbeat(SendAppendEntriesArgs) returns (google.protobuf.Empty) {} 
}

service ClientNumber{
    rpc SendClientNumber(Request) returns (google.protobuf.Empty) {}
}

service RequestVote{
    rpc SendVoteRequest(RequestVoteArgs) returns (electionRequestResponse) {}
}

service AppendEntries{
    rpc SendAppendEntries(SendAppendEntriesArgs) returns (SendAppendEntriesResponse) {}
}

service Commit{
    rpc SendCommitUpdate(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

service Redirect{
    rpc SendTerminalCommandRedirect(TerminalArgs) returns (google.protobuf.Empty) {}
}

